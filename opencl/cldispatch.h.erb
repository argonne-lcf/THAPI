#include "babeltrace_cl.h"
<% if $sink_type == 'production' %>
#include "cldispatch_callbacks.h"
<% elsif $sink_type == 'testing' %>
#include "testing_cldispatch_callbacks.h"
<% end %>

<% if $sink_type == 'production' %>
bt_component_class_initialize_method_status opencl_dispatch_initialize(
        bt_self_component_sink *self_component_sink,
        bt_self_component_sink_configuration *configuration,
        const bt_value *params, void *initialize_method_data);
<% elsif $sink_type == 'testing' %>
bt_component_class_initialize_method_status opencl_dispatch_testing_initialize(
        bt_self_component_sink *self_component_sink,
        bt_self_component_sink_configuration *configuration,
        const bt_value *params, void *initialize_method_data);
<% end %>

<% if $sink_type == 'production' %>
void opencl_dispatch_finalize(bt_self_component_sink *self_component_sink);
<% elsif $sink_type == 'testing' %>
void opencl_dispatch_testing_finalize(bt_self_component_sink *self_component_sink);
<% end %>

<% if $sink_type == 'production' %>
bt_component_class_sink_graph_is_configured_method_status
opencl_dispatch_graph_is_configured(bt_self_component_sink *self_component_sink);

void opencl_register_callback(struct opencl_dispatch *opencl_dispatch, const char *name, void *func);
<% elsif  $sink_type == 'testing' %>
bt_component_class_sink_graph_is_configured_method_status
opencl_dispatch_testing_graph_is_configured(bt_self_component_sink *self_component_sink);

void opencl_register_callback_testing(struct opencl_dispatch *opencl_dispatch, const char *name, void *func);
<% end %>

<% if $sink_type == 'production' %>
bt_component_class_sink_consume_method_status opencl_dispatch_consume(
        bt_self_component_sink *self_component_sink);
<% elsif  $sink_type == 'testing' %>
bt_component_class_sink_consume_method_status opencl_dispatch_testing_consume(
        bt_self_component_sink *self_component_sink);
<% end %>
