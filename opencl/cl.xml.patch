--- cl.xml	2020-10-21 09:49:17.390459386 -0500
+++ cl.xml.patched	2020-10-28 15:32:12.381190730 -0500
@@ -210,8 +210,10 @@
         <type category="define">typedef <type>cl_bitfield</type>      <name>cl_device_atomic_capabilities</name>;</type>
         <type category="define">typedef <type>cl_uint</type>          <name>cl_khronos_vendor_id</name>;</type>
         <type category="define">typedef <type>cl_uint</type>          <name>cl_version</name>;</type>
         <type category="define">typedef <type>cl_bitfield</type>      <name>cl_device_device_enqueue_capabilities</name>;</type>
+        <type category="define">typedef <type>cl_uint</type>          <name>cl_icdl_info</name>;</type>
+        <type category="define">typedef <type>cl_uint</type>          <name>cl_execution_info_intel</name>;</type>
 
             <comment>Structure types</comment>
         <type category="struct" name="cl_dx9_surface_info_khr">
             <member><type>IDirect3DSurface9</type>*  <name>resource</name></member>
@@ -249,16 +251,9 @@
             <member><type>size_t</type>              <name>image_row_pitch</name></member>
             <member><type>size_t</type>              <name>image_slice_pitch</name></member>
             <member><type>cl_uint</type>             <name>num_mip_levels</name></member>
             <member><type>cl_uint</type>             <name>num_samples</name></member>
-            <!-- Can't properly express this in XML schema yet - use name/ tag to align? -->
-            <member>#ifdef __GNUC__
-    __extension__   /* Prevents warnings about anonymous union in -pedantic builds */
-#endif
-    union {
-        cl_mem buffer;
-        cl_mem mem_object;
-    }</member>
+            <member><type>cl_mem</type>              <name>buffer</name></member>
         </type>
         <type category="struct" name="cl_buffer_region">
             <member><type>size_t</type>              <name>origin</name></member>
             <member><type>size_t</type>              <name>size</name></member>
@@ -552,13 +547,13 @@
         <enum value="CL_FALSE"      name="CL_NON_BLOCKING"/>
     </enums>
 
     <enums name="MiscNumbers" vendor="Multiple" comment="Tokens whose numeric value is intrinsically meaningful">
-        <enum value="((cl_device_partition_property_ext)0)"        name="CL_PROPERTIES_LIST_END_EXT"/>
-        <enum value="((cl_device_partition_property_ext)0)"        name="CL_PARTITION_BY_COUNTS_LIST_END_EXT"/>
-        <enum value="0x0"           name="CL_DEVICE_PARTITION_BY_COUNTS_LIST_END"/>
-        <enum value="((cl_device_partition_property_ext)0 - 1)"    name="CL_PARTITION_BY_NAMES_LIST_END_EXT"/>
-        <enum value="-1"            name="CL_PARTITION_BY_NAMES_LIST_END_INTEL"/>
+        <enum value="0x0"             name="CL_PROPERTIES_LIST_END_EXT"/>
+        <enum value="0x0"             name="CL_PARTITION_BY_COUNTS_LIST_END_EXT"/>
+        <enum value="0x0"             name="CL_DEVICE_PARTITION_BY_COUNTS_LIST_END"/>
+        <enum value="-1"              name="CL_PARTITION_BY_NAMES_LIST_END_EXT"/>
+        <enum value="-1"              name="CL_PARTITION_BY_NAMES_LIST_END_INTEL"/>
     </enums>
 
     <enums name="cl_affinity_domain_ext" vendor="IBM" comment="Property names for CL_DEVICE_PARTITION_BY_AFFINITY_DOMAIN_EXT. This is not a bitfield.">
         <enum value="0x1"           name="CL_AFFINITY_DOMAIN_L1_CACHE_EXT"/>
@@ -568,8 +563,15 @@
         <enum value="0x10"          name="CL_AFFINITY_DOMAIN_NUMA_EXT"/>
         <enum value="0x100"         name="CL_AFFINITY_DOMAIN_NEXT_FISSIONABLE_EXT"/>
     </enums>
 
+    <enums name="cl_icdl_info" vendor="OCLICD" comment="Property names for clGetICDLoaderInfoOCLICD.">
+        <enum value="0x1"           name="CL_ICDL_OCL_VERSION"/>
+        <enum value="0x2"           name="CL_ICDL_VERSION"/>
+        <enum value="0x3"           name="CL_ICDL_NAME"/>
+        <enum value="0x4"           name="CL_ICDL_VENDOR"/>
+    </enums>
+
     <enums name="cl_build_status" vendor="Khronos" comment="New values decrease">
         <enum value="0"             name="CL_BUILD_SUCCESS"/>
         <enum value="-1"            name="CL_BUILD_NONE"/>
         <enum value="-2"            name="CL_BUILD_ERROR"/>
@@ -2344,8 +2346,99 @@
             <param><type>cl_GLint</type>                   <name>miplevel</name></param>
             <param><type>cl_GLuint</type>                  <name>texture</name></param>
             <param><type>cl_int</type>*                    <name>errcode_ret</name></param>
         </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_int</type>                     <name>clGetICDLoaderInfoOCLICD</name></proto>
+            <param><type>cl_icdl_info</type>               <name>param_name</name></param>
+            <param><type>size_t</type>                     <name>param_value_size</name></param>
+            <param><type>void</type>*                      <name>param_value</name></param>
+            <param><type>size_t</type>*                    <name>param_value_size_ret</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_1_0">
+            <proto><type>cl_mem</type>                          <name>clCreateImageWithPropertiesINTEL</name></proto>
+            <param><type>cl_context</type>                      <name>context</name></param>
+            <param>const <type>cl_mem_properties_intel</type>*  <name>properties</name></param>
+            <param>const <type>cl_image_format</type>*          <name>image_format</name></param>
+            <param>const <type>cl_image_desc</type>*            <name>image_desc</name></param>
+            <param><type>void</type>*                           <name>host_ptr</name></param>
+            <param><type>cl_int</type>*                         <name>errcode_ret</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_1_1">
+            <proto><type>cl_int</type>                     <name>clGetImageParamsINTEL</name></proto>
+            <param><type>cl_context</type>                 <name>context</name></param>
+            <param>const <type>cl_image_format</type>*     <name>image_format</name></param>
+            <param>const <type>cl_image_desc</type>*       <name>image_desc</name></param>
+            <param><type>size_t</type>*                    <name>image_row_pitch</name></param>
+            <param><type>size_t</type>*                    <name>image_slice_pitch</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_0">
+            <proto><type>cl_int</type>                     <name>clEnqueueVerifyMemoryINTEL</name></proto>
+            <param><type>cl_command_queue</type>           <name>command_queue</name></param>
+            <param>const <type>void</type>*                <name>allocation_ptr</name></param>
+            <param>const <type>void</type>*                <name>expected_data</name></param>
+            <param><type>size_t</type>                     <name>size_of_comparison</name></param>
+            <param><type>cl_uint</type>                    <name>comparison_mode</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_0">
+            <proto><type>cl_int</type>                     <name>clAddCommentINTEL</name></proto>
+            <param><type>cl_device_id</type>               <name>device</name></param>
+            <param>const <type>char</type>*                <name>comment</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_command_queue</type>             <name>clCreatePerfCountersCommandQueueINTEL</name></proto>
+            <param><type>cl_context</type>                   <name>context</name></param>
+            <param><type>cl_device_id</type>                 <name>device</name></param>
+            <param><type>cl_command_queue_properties</type>  <name>properties</name></param>
+            <param><type>cl_uint</type>                      <name>configuration</name></param>
+            <param><type>cl_int</type>*                      <name>errcode_ret</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_int</type>                     <name>clSetPerformanceConfigurationINTEL</name></proto>
+            <param><type>cl_device_id</type>               <name>device</name></param>
+            <param><type>cl_uint</type>                    <name>count</name></param>
+            <param><type>cl_uint</type>*                   <name>offsets</name></param>
+            <param><type>cl_uint</type>*                   <name>values</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_int</type>                     <name>clGetDeviceFunctionPointerINTEL</name></proto>
+            <param><type>cl_device_id</type>               <name>device</name></param>
+            <param><type>cl_program</type>                 <name>program</name></param>
+            <param>const <type>char</type>*                <name>function_name</name></param>
+            <param><type>cl_ulong</type>*                  <name>function_pointer_ret</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_int</type>                     <name>clGetDeviceGlobalVariablePointerINTEL</name></proto>
+            <param><type>cl_device_id</type>               <name>device</name></param>
+            <param><type>cl_program</type>                 <name>program</name></param>
+            <param>const <type>char</type>*                <name>global_variable_name</name></param>
+            <param><type>size_t</type>*                    <name>global_variable_size_ret</name></param>
+            <param><type>void</type>**                     <name>global_variable_pointer_ret</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_int</type>                     <name>clGetExecutionInfoINTEL</name></proto>
+            <param><type>cl_command_queue</type>           <name>command_queue</name></param>
+            <param><type>cl_kernel</type>                  <name>kernel</name></param>
+            <param><type>cl_uint</type>                    <name>work_dim</name></param>
+            <param>const <type>size_t</type>*              <name>global_work_offset</name></param>
+            <param>const <type>size_t</type>*              <name>local_work_size</name></param>
+            <param><type>cl_execution_info_intel</type>    <name>param_name</name></param>
+            <param><type>size_t</type>                     <name>param_value_size</name></param>
+            <param><type>void</type>*                      <name>param_value</name></param>
+            <param><type>size_t</type>*                    <name>param_value_size_ret</name></param>
+        </command>
+        <command suffix="CL_EXT_SUFFIX__VERSION_2_1">
+            <proto><type>cl_int</type>                     <name>clEnqueueNDRangeKernelINTEL</name></proto>
+            <param><type>cl_command_queue</type>           <name>command_queue</name></param>
+            <param><type>cl_kernel</type>                  <name>kernel</name></param>
+            <param><type>cl_uint</type>                    <name>work_dim</name></param>
+            <param>const <type>size_t</type>*              <name>global_work_offset</name></param>
+            <param>const <type>size_t</type>*              <name>work_group_count</name></param>
+            <param>const <type>size_t</type>*              <name>local_work_size</name></param>
+            <param><type>cl_uint</type>                    <name>num_events_in_wait_list</name></param>
+            <param>const <type>cl_event</type>*            <name>event_wait_list</name></param>
+            <param><type>cl_event</type>*                  <name>event</name></param>
+        </command>
         <command suffix="CL_EXT_SUFFIX__VERSION_1_2">
             <proto><type>cl_int</type>                     <name>clGetDeviceIDsFromVA_APIMediaAdapterINTEL</name></proto>
             <param><type>cl_platform_id</type>             <name>platform</name></param>
             <param><type>cl_va_api_device_source_intel</type> <name>media_adapter_type</name></param>
@@ -4074,9 +4167,9 @@
             <enum name="CL_DEVICE_PARTITION_BY_COUNTS"/>
             <enum name="CL_DEVICE_PARTITION_BY_COUNTS_LIST_END"/>
             <enum name="CL_DEVICE_PARTITION_BY_AFFINITY_DOMAIN"/>
         </require>
-        <require comment="cl_device_affinity_domain">
+        <require comment="cl_device_affinity_domain - bitfield">
             <enum name="CL_DEVICE_AFFINITY_DOMAIN_NUMA"/>
             <enum name="CL_DEVICE_AFFINITY_DOMAIN_L4_CACHE"/>
             <enum name="CL_DEVICE_AFFINITY_DOMAIN_L3_CACHE"/>
             <enum name="CL_DEVICE_AFFINITY_DOMAIN_L2_CACHE"/>
@@ -4140,9 +4233,9 @@
             <enum name="CL_KERNEL_ARG_ACCESS_WRITE_ONLY"/>
             <enum name="CL_KERNEL_ARG_ACCESS_READ_WRITE"/>
             <enum name="CL_KERNEL_ARG_ACCESS_NONE"/>
         </require>
-        <require comment="cl_kernel_arg_type_qualifier">
+        <require comment="cl_kernel_arg_type_qualifier - bitfield">
             <enum name="CL_KERNEL_ARG_TYPE_NONE"/>
             <enum name="CL_KERNEL_ARG_TYPE_CONST"/>
             <enum name="CL_KERNEL_ARG_TYPE_RESTRICT"/>
             <enum name="CL_KERNEL_ARG_TYPE_VOLATILE"/>
@@ -4219,9 +4312,9 @@
         <require comment="cl_command_queue_properties - bitfield">
             <enum name="CL_QUEUE_ON_DEVICE"/>
             <enum name="CL_QUEUE_ON_DEVICE_DEFAULT"/>
         </require>
-        <require comment="cl_device_svm_capabilities">
+        <require comment="cl_device_svm_capabilities - bitfield">
             <enum name="CL_DEVICE_SVM_COARSE_GRAIN_BUFFER"/>
             <enum name="CL_DEVICE_SVM_FINE_GRAIN_BUFFER"/>
             <enum name="CL_DEVICE_SVM_FINE_GRAIN_SYSTEM"/>
             <enum name="CL_DEVICE_SVM_ATOMICS"/>
@@ -4259,9 +4352,9 @@
         </require>
         <require comment="cl_program_build_info">
             <enum name="CL_PROGRAM_BUILD_GLOBAL_VARIABLE_TOTAL_SIZE"/>
         </require>
-        <require comment="cl_kernel_arg_type_qualifier">
+        <require comment="cl_kernel_arg_type_qualifier - bitfield">
             <enum name="CL_KERNEL_ARG_TYPE_PIPE"/>
         </require>
         <require comment="cl_kernel_exec_info">
             <enum name="CL_KERNEL_EXEC_INFO_SVM_PTRS"/>
@@ -4361,9 +4454,9 @@
         </require>
         <require comment="OpenCL 2.2 Program Object APIs that were deprecated in OpenCL 3.0">
             <command name="clSetProgramReleaseCallback"/>
         </require>
-        <require comment="OpenCL 2.2 cl_program_info enums that were deprecated in OpenCL 3.0">
+        <require comment="cl_program_info OpenCL 2.2 cl_program_info enums that were deprecated in OpenCL 3.0">
             <enum name="CL_PROGRAM_SCOPE_GLOBAL_CTORS_PRESENT"/>
             <enum name="CL_PROGRAM_SCOPE_GLOBAL_DTORS_PRESENT"/>
         </require>
     </feature>
@@ -4588,14 +4681,14 @@
         <extension name="cl_khr_egl_image" supported="opencl">
             <require>
                 <type name="CL/cl.h"/>
             </require>
-            <require comment="Command type for events created with clEnqueueAcquireEGLObjectsKHR">
+            <require comment="cl_command_type for events created with clEnqueueAcquireEGLObjectsKHR">
                 <enum name="CL_COMMAND_EGL_FENCE_SYNC_OBJECT_KHR"/>
                 <enum name="CL_COMMAND_ACQUIRE_EGL_OBJECTS_KHR"/>
                 <enum name="CL_COMMAND_RELEASE_EGL_OBJECTS_KHR"/>
             </require>
-            <require comment="Error type for clCreateFromEGLImageKHR">
+            <require comment="Error codes for clCreateFromEGLImageKHR">
                 <enum name="CL_INVALID_EGL_OBJECT_KHR"/>
                 <enum name="CL_EGL_RESOURCE_NOT_ACQUIRED_KHR"/>
             </require>
             <require comment="CLeglImageKHR is an opaque handle to an EGLImage">
@@ -4679,10 +4772,12 @@
             </require>
             <require comment="cl_device_info">
                 <enum name="CL_DEVICE_IL_VERSION_KHR"/>
             </require>
-            <require comment="Program Object APIs">
+            <require comment="cl_program_info">
                 <enum name="CL_PROGRAM_IL_KHR"/>
+            </require>
+            <require>
                 <command name="clCreateProgramWithILKHR" comment="No EXT_SUFFIX?"/>
             </require>
         </extension>
         <extension name="cl_khr_image2D_buffer" supported="opencl">
@@ -4840,9 +4935,9 @@
             </require>
             <require comment="cl_device_partition_property_ext">
                 <type name="cl_mem_migration_flags_ext"/>
             </require>
-            <require comment="cl_mem_migration_flags_ext">
+            <require comment="cl_mem_migration_flags_ext - bitfield">
                 <enum name="CL_MIGRATE_MEM_OBJECT_HOST_EXT"/>
             </require>
             <require comment="cl_command_type">
                 <enum name="CL_COMMAND_MIGRATE_MEM_OBJECT_EXT"/>
@@ -4927,12 +5022,12 @@
         <extension name="cl_img_use_gralloc_ptr" supported="opencl">
             <require>
                 <type name="CL/cl.h"/>
             </require>
-            <require comment="Flag values used by clCreateBuffer">
+            <require comment="cl_mem_flags Flag values used by clCreateBuffer">
                 <enum name="CL_MEM_USE_GRALLOC_PTR_IMG"/>
             </require>
-            <require comment="To be used by clGetEventInfo">
+            <require comment="cl_command_type To be used by clGetEventInfo">
                 <enum name="CL_COMMAND_ACQUIRE_GRALLOC_OBJECTS_IMG"/>
                 <enum name="CL_COMMAND_RELEASE_GRALLOC_OBJECTS_IMG"/>
             </require>
             <require comment="Error codes">
@@ -5004,9 +5099,9 @@
             </require>
             <require comment="To be used by clGetEventInfo">
                 <type name="cl_import_properties_arm"/>
             </require>
-            <require comment="default and valid properties name for cl_arm_import_memory">
+            <require comment="cl_import_properties_arm default and valid properties name for cl_arm_import_memory">
                 <enum name="CL_IMPORT_TYPE_ARM"/>
                 <enum name="CL_IMPORT_TYPE_HOST_ARM"/>
                 <enum name="CL_IMPORT_TYPE_DMA_BUF_ARM"/>
                 <enum name="CL_IMPORT_TYPE_PROTECTED_ARM"/>
@@ -5039,32 +5134,32 @@
                 <type name="cl_svm_mem_flags_arm"/>
                 <type name="cl_kernel_exec_info_arm"/>
                 <type name="cl_device_svm_capabilities_arm"/>
             </require>
-            <require comment="Used by clGetEventInfo">
+            <require comment="cl_event_info Used by clGetEventInfo">
                 <enum name="CL_DEVICE_SVM_CAPABILITIES_ARM"/>
             </require>
-            <require comment="Used by clGetMemObjectInfo">
+            <require comment="cl_mem_info Used by clGetMemObjectInfo">
                 <enum name="CL_MEM_USES_SVM_POINTER_ARM"/>
             </require>
-            <require comment="Used by clSetKernelExecInfoARM">
+            <require comment="cl_kernel_exec_info_arm Used by clSetKernelExecInfoARM">
                 <enum name="CL_KERNEL_EXEC_INFO_SVM_PTRS_ARM"/>
                 <enum name="CL_KERNEL_EXEC_INFO_SVM_FINE_GRAIN_SYSTEM_ARM"/>
             </require>
-            <require comment="Used by clGetEventInfo">
+            <require comment="cl_command_type Used by clGetEventInfo">
                 <enum name="CL_COMMAND_SVM_FREE_ARM"/>
                 <enum name="CL_COMMAND_SVM_MEMCPY_ARM"/>
                 <enum name="CL_COMMAND_SVM_MEMFILL_ARM"/>
                 <enum name="CL_COMMAND_SVM_MAP_ARM"/>
                 <enum name="CL_COMMAND_SVM_UNMAP_ARM"/>
             </require>
-            <require comment="Returned by clGetDeviceInfo with CL_DEVICE_SVM_CAPABILITIES_ARM">
+            <require comment="cl_device_svm_capabilities_arm - bitfield Returned by clGetDeviceInfo with CL_DEVICE_SVM_CAPABILITIES_ARM">
                 <enum name="CL_DEVICE_SVM_COARSE_GRAIN_BUFFER_ARM"/>
                 <enum name="CL_DEVICE_SVM_FINE_GRAIN_BUFFER_ARM"/>
                 <enum name="CL_DEVICE_SVM_FINE_GRAIN_SYSTEM_ARM"/>
                 <enum name="CL_DEVICE_SVM_ATOMICS_ARM"/>
             </require>
-            <require comment="Flag values used by clSVMAllocARM">
+            <require comment="cl_svm_mem_flags_arm Flag values used by clSVMAllocARM">
                 <enum name="CL_MEM_SVM_FINE_GRAIN_BUFFER_ARM"/>
                 <enum name="CL_MEM_SVM_ATOMICS_ARM"/>
             </require>
             <require>
@@ -5612,9 +5707,9 @@
                 <enum name="CL_DEVICE_SINGLE_DEVICE_SHARED_MEM_CAPABILITIES_INTEL"/>
                 <enum name="CL_DEVICE_CROSS_DEVICE_SHARED_MEM_CAPABILITIES_INTEL"/>
                 <enum name="CL_DEVICE_SHARED_SYSTEM_MEM_CAPABILITIES_INTEL"/>
             </require>
-            <require comment="cl_unified_shared_memory_capabilities_intel - bitfield">
+            <require comment="cl_device_unified_shared_memory_capabilities_intel - bitfield">
                 <enum name="CL_UNIFIED_SHARED_MEMORY_ACCESS_INTEL"/>
                 <enum name="CL_UNIFIED_SHARED_MEMORY_ATOMIC_ACCESS_INTEL"/>
                 <enum name="CL_UNIFIED_SHARED_MEMORY_CONCURRENT_ACCESS_INTEL"/>
                 <enum name="CL_UNIFIED_SHARED_MEMORY_CONCURRENT_ATOMIC_ACCESS_INTEL"/>
