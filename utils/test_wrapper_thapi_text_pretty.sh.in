#!/usr/bin/env bash
#
# Usage: test_wrapper_thapi_text_pretty.sh cuda|hip|ze /path/to/trac.bt_text_pretty
# 
set -euxo pipefail

: "${CC:=gcc}"

be="$1"
trace_path="$2"

btx_model_path="@top_builddir@/${be}/btx_${be}_model.yaml"
trace_name="$(basename ${trace_path%.thapi_text_pretty})"
expected_output_path="$(dirname $trace_path)/${trace_name}.bt_text_pretty"
out_dir="@top_builddir@/${be}/tests/$trace_name"
metababel_out_dir="${out_dir}/btx_source"
cleaned_model_path="${out_dir}/btx_model.yaml"

mkdir -p "${out_dir}"
@top_srcdir@/utils/thapi_model_remove_packet_context_fields.rb \
  "$btx_model_path" "${cleaned_model_path}"

trace_fname=$(basename "$trace_path")
source_c_fname="${trace_fname%.bt_text_pretty}.c"
source_c_path="${out_dir}/${source_c_fname}"

set -x

@top_srcdir@/utils/thapi_log_to_bt_source_component.rb -y "$cleaned_model_path" \
  -i "$trace_path" -o "$source_c_path"

metababel -d "$cleaned_model_path" -t SOURCE -o "${metababel_out_dir}" \
  -p generated -i ${be}.h.include

${CC} -g -Werror -o ${out_dir}/btx_source.so \
  -I ${metababel_out_dir} -I @top_srcdir@/utils/include \
  -I @top_srcdir@/${be} -I @top_srcdir@/${be}/include -I @top_builddir@/${be} \
  $(pkg-config --cflags babeltrace2) \
  $(pkg-config --libs babeltrace2) \
  -fPIC --shared \
  "${source_c_path}" \
  "${metababel_out_dir}"/*.c \
  "${metababel_out_dir}"/metababel/*.c

bt2_cmd="babeltrace2"
if [[ -v THAPI_VALGRIND ]]; then
  bt2_cmd="valgrind --suppressions=@top_srcdir@/.valgrind/dlopen.supp --error-exitcode=1 --leak-check=full --quiet -- $bt2_cmd"
fi
babeltrace_pretty_out="${out_dir}"/thapi-events-babeltrace.txt
$bt2_cmd --plugin-path="${out_dir}:@top_builddir@/${be}/.libs/" \
  --component=source.generated.btx \
  --component=filter.${be}interval.interval \
  > "${babeltrace_pretty_out}"

diff "$expected_output_path" "$babeltrace_pretty_out"
