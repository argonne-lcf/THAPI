#!/usr/bin/env bash
#
# Usage: test_wrapper_thapi_text_pretty.sh backend archive /path/to/log.thapi_text_pretty
#
set -euxo pipefail

subdir="$1"
be="$2"
source_path="$3"
source_archive="$4"
input_thapi_text_pretty="$5"

# Generated tmp folder
folder_name="tests/"$(basename "${input_thapi_text_pretty}" .thapi_text_pretty)
mkdir -p "$folder_name"

# Generate source callback and link plugin
source_callback_c="${folder_name}/callback.c"

@top_srcdir@/utils/thapi_log_to_bt_source_component.rb -y "@top_builddir@/${subdir}/btx_${be}_model.yaml" \
  -i "${input_thapi_text_pretty}" -o "${source_callback_c}"

modified_include_arg=""
if [ "$be" = "omp" ]; then
  modified_include_arg="-I @top_builddir@/${subdir}/modified_include"
fi

${CC:-gcc} -o "${folder_name}/libTestSource.so" \
  $modified_include_arg \
  -I @top_srcdir@/utils/include -I @top_srcdir@/"${subdir}" -I @top_srcdir@/"${subdir}"/include \
  -I . -I "${source_path}" \
  $(pkg-config --cflags babeltrace2) -fPIC -Wall -Wextra -Wno-unused-parameter -Wno-unused-variable -Werror \
  $(pkg-config --libs babeltrace2) --shared \
  -Wl,--whole-archive  "${source_archive}" -Wl,--no-whole-archive \
  "${source_callback_c}"

# Run Plugin and Verify output
bt2_cmd="babeltrace2"
if [[ -v THAPI_VALGRIND ]]; then
  bt2_cmd="valgrind --suppressions=@top_srcdir@/.valgrind/dlopen.supp --error-exitcode=1 --leak-check=full --quiet -- $bt2_cmd"
fi

current_output_bt_text_pretty="${folder_name}/current.bt_text_pretty"

# hack because opencl components and libs use just 'cl'
ln -f @top_builddir@/${subdir}/.libs/"lib${be^^}Interval.so" ${folder_name}/
$bt2_cmd --plugin-path="${folder_name}" \
  --component=source."${be}"test.test \
  --component=filter."${be}"interval.interval \
  > "${current_output_bt_text_pretty}"

diff "${input_thapi_text_pretty/.thapi_text_pretty/.bt_text_pretty}" "$current_output_bt_text_pretty"

# Remove tmp file
rm -rf "$folder_name"
