diff -u4 -r include/omp-tools.h modified_include/omp-tools.h
--- include/omp-tools.h	2022-03-21 21:52:54.137081000 +0000
+++ modified_include/omp-tools.h	2022-03-24 20:08:01.841925000 +0000
@@ -688,8 +688,29 @@
 
 typedef void (*ompt_callback_device_unload_t)(int device_num,
                                               uint64_t module_id);
 
+typedef void (*ompt_callback_target_data_op_emi_t) (
+  ompt_scope_endpoint_t endpoint,
+  ompt_data_t *target_task_data,
+  ompt_data_t *target_data,
+  ompt_id_t *host_op_id,
+  ompt_target_data_op_t optype,
+  void *src_addr,
+  int src_device_num,
+  void *dest_addr,
+  int dest_device_num,
+  size_t bytes,
+  const void *codeptr_ra
+);
+
+typedef void (*ompt_callback_target_data_op_intel_t)(
+    ompt_scope_endpoint_t endpoint, ompt_id_t target_id,
+    ompt_id_t host_op_id, ompt_target_data_op_t optype,
+    void *src_addr, int src_device_num,
+    void *dest_addr, int dest_device_num,
+    size_t bytes, const void *codeptr_ra);
+
 typedef void (*ompt_callback_target_data_op_t)(
     ompt_id_t target_id, ompt_id_t host_op_id, ompt_target_data_op_t optype,
     void *src_addr, int src_device_num, void *dest_addr, int dest_device_num,
     size_t bytes, const void *codeptr_ra);
@@ -705,8 +726,18 @@
   ompt_device_time_t end_time;
   const void *codeptr_ra;
 } ompt_record_target_data_op_t;
 
+typedef void (*ompt_callback_target_emi_t) (
+  ompt_target_t kind,
+  ompt_scope_endpoint_t endpoint,
+  int device_num,
+  ompt_data_t *task_data,
+  ompt_data_t *target_task_data,
+  ompt_data_t *target_data,
+  const void *codeptr_ra
+);
+
 typedef void (*ompt_callback_target_t)(ompt_target_t kind,
                                        ompt_scope_endpoint_t endpoint,
                                        int device_num, ompt_data_t *task_data,
                                        ompt_id_t target_id,
@@ -741,8 +772,16 @@
 typedef void (*ompt_callback_target_submit_t)(ompt_id_t target_id,
                                               ompt_id_t host_op_id,
                                               unsigned int requested_num_teams);
 
+typedef void (*ompt_callback_target_submit_intel_t) (
+    ompt_scope_endpoint_t endpoint,
+    ompt_id_t target_id,
+    ompt_id_t host_op_id,
+    unsigned int requested_num_teams
+);
+
+
 typedef struct ompt_record_target_kernel_t {
   ompt_id_t host_op_id;
   unsigned int requested_num_teams;
   unsigned int granted_num_teams;
@@ -798,11 +837,8 @@
 
 ompt_start_tool_result_t *ompt_start_tool(unsigned int omp_version,
                                           const char *runtime_version);
 
-ompd_rc_t ompd_initialize(ompd_word_t api_version,
-                          const ompd_callbacks_t *callbacks);
-
 ompd_rc_t ompd_get_api_version(ompd_word_t *version);
 
 ompd_rc_t ompd_get_version_string(const char **string);
 
@@ -980,8 +1016,11 @@
   ompd_callback_get_thread_context_for_thread_id_fn_t
       get_thread_context_for_thread_id;
 } ompd_callbacks_t;
 
+ompd_rc_t ompd_initialize(ompd_word_t api_version,
+                          const ompd_callbacks_t *callbacks);
+
 void ompd_bp_parallel_begin(void);
 
 void ompd_bp_parallel_end(void);
 
